Program state
Id: 1
Exe Stack: 
(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v3
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v3
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v3
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 2)
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 2)
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 2)
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v2, 3)
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v2, 3)
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v2, 3)
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
print(2)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
print(2)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
print(2)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
print(4)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
print(4)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
print(4)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(1)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(1)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(1)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v3;(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v3
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v3
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v3
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 2);(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 2)
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 2)
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 2)
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v2, 3);(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v2, 3)
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v2, 3)
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v2, 3)
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(new(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
new(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
print(2)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
print(2)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
print(2)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
print(4)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
print(4)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
print(4)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(1)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(1)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(1)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v3
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v3
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v3
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewHeap(v1, 2)
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewHeap(v1, 2)
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewHeap(v1, 2)
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewHeap(v2, 3)
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewHeap(v2, 3)
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewHeap(v2, 3)
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewHeap(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewHeap(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewHeap(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 1
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
print(2)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
print(2)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
print(2)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=2}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=1}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
print(4)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
print(4)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
print(4)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 4
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(1)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(1)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(1)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1, 100] 
Latch Table: {1=0}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 2, 30, 3, 40, 4, 100, 1, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v3
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v3
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v3
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
int cnt
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
int cnt
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
int cnt
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v1, 2)
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v1, 2)
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v1, 2)
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v2, 3)
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v2, 3)
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v2, 3)
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(4)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(4)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(4)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 5
Exe Stack: 
print(5)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 5
Exe Stack: 
print(5)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 5
Exe Stack: 
print(5)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 5
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 5
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(2)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(2)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(2)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100, 2] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100, 2] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100, 2] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100, 2, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100, 2, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(Ref(int) v1;(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v1
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v2;(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v2
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(Ref(int) v3;(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v3
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v3
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
Ref(int) v3
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(int cnt;(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
int cnt
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
int cnt
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
int cnt
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v1, 2);(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v1, 2)
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v1, 2)
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v1, 2)
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(0, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v2, 3);(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v2, 3)
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v2, 3)
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v2, 3)
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(0, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewHeap(v3, 4);(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewHeap(v3, 4)
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(0, int)} 
File Table: {}
Heap Table: {1->2; 2->3; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(NewLatch(cnt, ReadHeap(v2));(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100))))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
NewLatch(cnt, ReadHeap(v2))
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=0, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {}

Program state
Id: 2
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))));(Await(cnt);(print(100);(CountDown(cnt);print(100)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
fork((WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))))
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
(Await(cnt);(print(100);(CountDown(cnt);print(100))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->2; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 3
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=3}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
print(3)
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
fork((WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(WriteHeap(v2, ReadHeap(v2)*10);(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
WriteHeap(v2, ReadHeap(v2)*10)
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->3; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(print(ReadHeap(v2));(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
print(ReadHeap(v2))
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
(CountDown(cnt);fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 4
Exe Stack: 
CountDown(cnt)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=2}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(4)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(4)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
print(4)
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
fork((WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt))))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 4
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(WriteHeap(v3, ReadHeap(v3)*10);(print(ReadHeap(v3));CountDown(cnt)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
WriteHeap(v3, ReadHeap(v3)*10)
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->4; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
(print(ReadHeap(v3));CountDown(cnt))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
print(ReadHeap(v3))
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 5
Exe Stack: 
CountDown(cnt)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=1}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 5
Exe Stack: 
print(5)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 5
Exe Stack: 
print(5)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
Await(cnt)
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 5
Exe Stack: 
print(5)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 5
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 5
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(print(100);(CountDown(cnt);print(100)))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
(CountDown(cnt);print(100))
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
CountDown(cnt)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(2)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(2)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(2)
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100, 2] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100, 2] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
print(100)
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100, 2] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100, 2, 100] 
Latch Table: {1=0}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int), v2=(2, int), v3=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->30; 3->40; }
Output Console: [20, 3, 30, 4, 40, 5, 100, 2, 100] 
Latch Table: {1=0}


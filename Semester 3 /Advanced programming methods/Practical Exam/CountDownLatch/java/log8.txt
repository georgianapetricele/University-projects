Program state
Exe Stack: 
(Ref(int) v;(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Exe Stack: 
Ref(int) v
(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Exe Stack: 
(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))))
 
Sym Table: {v=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Exe Stack: 
new(v, 20)
(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a))))))
 
Sym Table: {v=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Exe Stack: 
(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a))))))
 
Sym Table: {v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Exe Stack: 
Ref(Ref(int)) a
(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))
 
Sym Table: {v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Exe Stack: 
(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))
 
Sym Table: {a=(0, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Exe Stack: 
new(a, v)
(new(v, 30);print(ReadHeap(ReadHeap(a))))
 
Sym Table: {a=(0, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Exe Stack: 
(new(v, 30);print(ReadHeap(ReadHeap(a))))
 
Sym Table: {a=(2, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; 2->(1, int); }
Output Console: [] 

Program state
Exe Stack: 
new(v, 30)
print(ReadHeap(ReadHeap(a)))
 
Sym Table: {a=(2, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; 2->(1, int); }
Output Console: [] 

Program state
Exe Stack: 
print(ReadHeap(ReadHeap(a)))
 
Sym Table: {a=(2, Ref(int)), v=(3, int)} 
File Table: {}
Heap Table: {2->(1, int); 3->30; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
(Ref(int) v;(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 8
Exe Stack: 
Ref(int) v
(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 8
Exe Stack: 
Ref(int) v
(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 8
Exe Stack: 
(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))))
 
Sym Table: {v=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 8
Exe Stack: 
(new(v, 20);(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))))
 
Sym Table: {v=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 8
Exe Stack: 
new(v, 20)
(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a))))))
 
Sym Table: {v=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 8
Exe Stack: 
new(v, 20)
(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a))))))
 
Sym Table: {v=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 8
Exe Stack: 
(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a))))))
 
Sym Table: {v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
(Ref(Ref(int)) a;(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a))))))
 
Sym Table: {v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
Ref(Ref(int)) a
(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))
 
Sym Table: {v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
Ref(Ref(int)) a
(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))
 
Sym Table: {v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))
 
Sym Table: {a=(0, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
(new(a, v);(new(v, 30);print(ReadHeap(ReadHeap(a)))))
 
Sym Table: {a=(0, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
new(a, v)
(new(v, 30);print(ReadHeap(ReadHeap(a))))
 
Sym Table: {a=(0, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
new(a, v)
(new(v, 30);print(ReadHeap(ReadHeap(a))))
 
Sym Table: {a=(0, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
(new(v, 30);print(ReadHeap(ReadHeap(a))))
 
Sym Table: {a=(2, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; 2->(1, int); }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
(new(v, 30);print(ReadHeap(ReadHeap(a))))
 
Sym Table: {a=(2, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; 2->(1, int); }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
new(v, 30)
print(ReadHeap(ReadHeap(a)))
 
Sym Table: {a=(2, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; 2->(1, int); }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
new(v, 30)
print(ReadHeap(ReadHeap(a)))
 
Sym Table: {a=(2, Ref(int)), v=(1, int)} 
File Table: {}
Heap Table: {1->20; 2->(1, int); }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
print(ReadHeap(ReadHeap(a)))
 
Sym Table: {a=(2, Ref(int)), v=(3, int)} 
File Table: {}
Heap Table: {1->20; 2->(1, int); 3->30; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
print(ReadHeap(ReadHeap(a)))
 
Sym Table: {a=(2, Ref(int)), v=(3, int)} 
File Table: {}
Heap Table: {2->(1, int); 3->30; }
Output Console: [] 

Program state
Id: 8
Exe Stack: 
 
Sym Table: {a=(2, Ref(int)), v=(3, int)} 
File Table: {}
Heap Table: {2->(1, int); 3->30; }
Output Console: [] 


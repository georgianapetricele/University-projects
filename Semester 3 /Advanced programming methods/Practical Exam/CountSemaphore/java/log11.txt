Program state
Id: 1
Exe Stack: 
(Ref(int) v1;(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 1)
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 1)
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 1)
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
CreateSemaphore(cnt, ReadHeap(v1))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
CreateSemaphore(cnt, ReadHeap(v1))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
CreateSemaphore(cnt, ReadHeap(v1))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
print(ReadHeap(v1)-1)
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
print(ReadHeap(v1)-1)
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
print(ReadHeap(v1)-1)
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*2)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*2)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*2)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9, 200] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9, 200] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9, 200] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9, 200] 
Semaphore Table: {1=1=[]}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9, 200] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(Ref(int) v1;(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
Ref(int) v1
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int cnt;(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int cnt
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(new(v1, 1);(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 1)
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 1)
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
new(v1, 1)
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(0, int)} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(CreateSemaphore(cnt, ReadHeap(v1));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
CreateSemaphore(cnt, ReadHeap(v1))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
CreateSemaphore(cnt, ReadHeap(v1))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
CreateSemaphore(cnt, ReadHeap(v1))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=0, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))));(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))))
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))));(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
fork((Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))))
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
(Acquire(cnt);(print(ReadHeap(v1)-1);Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
(Acquire(cnt);(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->1; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 2
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[2]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 2
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
Acquire(cnt)
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
(print(ReadHeap(v1)-1);Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
print(ReadHeap(v1)-1)
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
print(ReadHeap(v1)-1)
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
print(ReadHeap(v1)-1)
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 3
Exe Stack: 
Acquire(cnt)
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[1]}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*10);(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt))))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*10)
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->10; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(WriteHeap(v1, ReadHeap(v1)*2);(print(ReadHeap(v1));Release(cnt)))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*2)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*2)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
WriteHeap(v1, ReadHeap(v1)*2)
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->100; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
(print(ReadHeap(v1));Release(cnt))
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
print(ReadHeap(v1))
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9, 200] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9, 200] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
Release(cnt)
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9, 200] 
Semaphore Table: {1=1=[3]}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9, 200] 
Semaphore Table: {1=1=[]}

Program state
Id: 3
Exe Stack: 
 
Sym Table: {cnt=1, v1=(1, int)} 
File Table: {}
Heap Table: {1->200; }
Output Console: [10, 9, 200] 
Semaphore Table: {1=1=[]}

Program state
Id: 1
Exe Stack: 
(int a;(int b;(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int a
(int b;(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int a
(int b;(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int a
(int b;(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int b;(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))))
 
Sym Table: {a=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int b;(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))))
 
Sym Table: {a=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int b;(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))))
 
Sym Table: {a=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int b
(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))))
 
Sym Table: {a=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int b
(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))))
 
Sym Table: {a=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int b
(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))))
 
Sym Table: {a=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))))
 
Sym Table: {a=0, b=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))))
 
Sym Table: {a=0, b=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(int c;(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))))
 
Sym Table: {a=0, b=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int c
(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))
 
Sym Table: {a=0, b=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int c
(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))
 
Sym Table: {a=0, b=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
int c
(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))
 
Sym Table: {a=0, b=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))
 
Sym Table: {a=0, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))
 
Sym Table: {a=0, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(a=1;(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))))
 
Sym Table: {a=0, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
a=1
(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))
 
Sym Table: {a=0, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
a=1
(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))
 
Sym Table: {a=0, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
a=1
(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))
 
Sym Table: {a=0, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))
 
Sym Table: {a=1, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))
 
Sym Table: {a=1, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(b=2;(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))))
 
Sym Table: {a=1, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
b=2
(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))
 
Sym Table: {a=1, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
b=2
(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))
 
Sym Table: {a=1, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
b=2
(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))
 
Sym Table: {a=1, b=0, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))
 
Sym Table: {a=1, b=2, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))
 
Sym Table: {a=1, b=2, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(c=5;(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300)))
 
Sym Table: {a=1, b=2, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
c=5
(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))
 
Sym Table: {a=1, b=2, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
c=5
(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))
 
Sym Table: {a=1, b=2, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
c=5
(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))
 
Sym Table: {a=1, b=2, c=0} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300));print(300))
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300))
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300))
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
Switch(a*10) (case b*c: (print(a);print(b))) (case 10: (print(100);print(200))) (default: print(300))
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(IF(a*10 == b*c) THEN((print(a);print(b)))ELSE((IF(a*10 == 10) THEN((print(100);print(200)))ELSE(print(300)))))
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(IF(a*10 == b*c) THEN((print(a);print(b)))ELSE((IF(a*10 == 10) THEN((print(100);print(200)))ELSE(print(300)))))
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(IF(a*10 == b*c) THEN((print(a);print(b)))ELSE((IF(a*10 == 10) THEN((print(100);print(200)))ELSE(print(300)))))
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(print(a);print(b))
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(print(a);print(b))
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
(print(a);print(b))
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
print(a)
print(b)
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
print(a)
print(b)
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
print(a)
print(b)
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
print(b)
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [1] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
print(b)
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [1] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
print(b)
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [1] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [1, 2] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [1, 2] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
print(300)
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [1, 2] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [1, 2, 300] 
Semaphore Table: {}

Program state
Id: 1
Exe Stack: 
 
Sym Table: {a=1, b=2, c=5} 
File Table: {}
Heap Table: {}
Output Console: [1, 2, 300] 
Semaphore Table: {}


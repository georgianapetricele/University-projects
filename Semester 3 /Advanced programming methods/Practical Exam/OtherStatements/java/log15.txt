Program state
Id: 1
Exe Stack: 
(int v1;(int v2;(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
int v1
(int v2;(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
int v1
(int v2;(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
int v1
(int v2;(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))))
 
Sym Table: {} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(int v2;(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))))
 
Sym Table: {v1=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(int v2;(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))))
 
Sym Table: {v1=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(int v2;(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))))
 
Sym Table: {v1=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
int v2
(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))))
 
Sym Table: {v1=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
int v2
(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))))
 
Sym Table: {v1=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
int v2
(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))))
 
Sym Table: {v1=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))))
 
Sym Table: {v1=0, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))))
 
Sym Table: {v1=0, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(v1=2;(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))))
 
Sym Table: {v1=0, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
v1=2
(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))
 
Sym Table: {v1=0, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
v1=2
(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))
 
Sym Table: {v1=0, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
v1=2
(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))
 
Sym Table: {v1=0, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))
 
Sym Table: {v1=2, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))
 
Sym Table: {v1=2, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(v2=3;(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1))))
 
Sym Table: {v1=2, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
v2=3
(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))
 
Sym Table: {v1=2, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
v2=3
(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))
 
Sym Table: {v1=2, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
v2=3
(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))
 
Sym Table: {v1=2, v2=0} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))
 
Sym Table: {v1=2, v2=3} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))
 
Sym Table: {v1=2, v2=3} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
(IF(v1 != 0) THEN(print(MULExp{exp1=v1, exp2=v2}))ELSE(print(v1)))
 
Sym Table: {v1=2, v2=3} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
print(MULExp{exp1=v1, exp2=v2})
 
Sym Table: {v1=2, v2=3} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
print(MULExp{exp1=v1, exp2=v2})
 
Sym Table: {v1=2, v2=3} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
print(MULExp{exp1=v1, exp2=v2})
 
Sym Table: {v1=2, v2=3} 
File Table: {}
Heap Table: {}
Output Console: [] 

Program state
Id: 1
Exe Stack: 
 
Sym Table: {v1=2, v2=3} 
File Table: {}
Heap Table: {}
Output Console: [1] 


Program state
Id: 1
Exe Stack: 
(int v;(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=0
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=0
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=0
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(5)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(5)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(5)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(4)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(4)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(4)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(3)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(3)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(3)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(2)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(2)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(2)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(1)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(1)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(1)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(0)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(0)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(0)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3, 40] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3, 40] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int v;(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=0;(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=0
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=0
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=0
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(while(v < 3){(fork((print(v);v=v+1));v=v+1)};(sleep(5);print(v*10)))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(fork((print(v);v=v+1));v=v+1)
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=v+1
 
Sym Table: 
{v=1}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((print(v);v=v+1))
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=v+1
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(print(v);v=v+1)
 
Sym Table: 
{v=2}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
while(v < 3){(fork((print(v);v=v+1));v=v+1)}
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(sleep(5);print(v*10))
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=v+1
 
Sym Table: 
{v=3}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(5)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(5)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(5)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(4)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(4)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(4)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(3)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(3)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(3)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(2)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(2)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(2)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(1)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(1)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(1)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(0)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(0)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
sleep(0)
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v*10)
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3, 40] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
 
Sym Table: 
{v=4}
 
File Table: {}
Heap Table: {}
Output Console: [1, 3, 40] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}


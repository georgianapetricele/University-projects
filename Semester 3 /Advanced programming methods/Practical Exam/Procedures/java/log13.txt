Program state
Id: 1
Exe Stack: 
(int v;(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int w
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int w
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int w
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=2
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=2
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=2
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
w=5
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
w=5
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
w=5
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Call sum[v*10, w]
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Call sum[v*10, w]
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Call sum[v*10, w]
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=a+b
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=a+b
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=a+b
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(Call product[v, w];fork(Call sum[v, w]))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(Call product[v, w];fork(Call sum[v, w]))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(Call product[v, w];fork(Call sum[v, w]))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Call product[v, w]
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Call product[v, w]
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Call product[v, w]
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(int v;(v=a*b;print(v)))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(int v;(v=a*b;print(v)))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(int v;(v=a*b;print(v)))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
int v
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
int v
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
int v
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=a*b
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=a*b
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=a*b
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Call sum[v, w]
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Call sum[v, w]
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Call sum[v, w]
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
int v
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
int v
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
int v
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=a+b
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=a+b
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=a+b
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10, 7] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10, 7] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10, 7] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10, 7] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10, 7] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int v;(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int w;(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int w
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int w
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int w
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=2;(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=2
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=2
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=2
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=0, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(w=5;(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
w=5
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
w=5
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
w=5
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=0}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(Call sum[v*10, w];(print(v);fork((Call product[v, w];fork(Call sum[v, w])))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Call sum[v*10, w]
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Call sum[v*10, w]
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Call sum[v*10, w]
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
int v
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(v=a+b;print(v))
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=a+b
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=a+b
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
v=a+b
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
Return
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{a=20, b=5, v=25}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
(print(v);fork((Call product[v, w];fork(Call sum[v, w]))))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
print(v)
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
fork((Call product[v, w];fork(Call sum[v, w])))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(Call product[v, w];fork(Call sum[v, w]))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 1
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(Call product[v, w];fork(Call sum[v, w]))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(Call product[v, w];fork(Call sum[v, w]))
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Call product[v, w]
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Call product[v, w]
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Call product[v, w]
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(int v;(v=a*b;print(v)))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(int v;(v=a*b;print(v)))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(int v;(v=a*b;print(v)))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
int v
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
int v
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
int v
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
(v=a*b;print(v))
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=a*b
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=a*b
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
v=a*b
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
print(v)
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
Return
fork(Call sum[v, w])
 
Sym Table: 
{a=2, b=5, v=10}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
fork(Call sum[v, w])
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Call sum[v, w]
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 2
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Call sum[v, w]
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Call sum[v, w]
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(int v;(v=a+b;print(v)))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
int v
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
int v
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
int v
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
(v=a+b;print(v))
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=a+b
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=a+b
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
v=a+b
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=0}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
print(v)
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10, 7] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10, 7] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
Return
 
Sym Table: 
{a=2, b=5, v=7}
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10, 7] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10, 7] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}

Program state
Id: 3
Exe Stack: 
 
Sym Table: 
{v=2, w=5}
 
File Table: {}
Heap Table: {}
Output Console: [25, 2, 10, 7] 
Procedures Table: {product=[a, b]=(int v;(v=a*b;print(v))), sum=[a, b]=(int v;(v=a+b;print(v)))}


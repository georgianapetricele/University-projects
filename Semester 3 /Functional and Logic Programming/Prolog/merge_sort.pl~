
%
%mergeSort(l1..ln) = [], if n=0
%                  = l1, if n=1
%                  = merge(mergeSort(l2..l(n/2)),mergeSort(l(n/2+1)..ln)
%
%merge(l1..ln,q1..qn) = []
%                     =l1..ln, if m=0
%                     =q1..qm, if n=0
%                     = l1+merge(l2..ln,q1..qn), if l1<=q1
%                     =q1+
%split(l1..ln) = [],
%              = spli(l1..l(n/2),l(n/2+1)..l(n))
%

split([],[],[]).
split([A],[A],[]).
split([H1,H2|T],[H1|R1],[H2|R2]):-
    split(T,R1,R2).

merge([],[],[]).
merge(L1,[],L1).
merge([],L2,L2).
merge([H1|T1],[H2|T2],[H1|R]):- H1=<H2,
    merge(T1,[H2|T2],R).
merge([H1|T1],[H2|T2],[H2|R]):- H1>H2,
    merge([H1|T1],T2,R).


merge_sort(L,R):-
    split(L,L1,L2),
    merge_sort(L1,R1),
    merge_sort(L2,R2),
    merge(R1,R2,R).

%mergeSort(l,R):-
%split(l,A,b)
%mergeSort(A,R1)
%mergeSort(B,R2)
%merge(A,B,R)











%2.a. Write a predicate to remove all occurrences of a certain atom from
% a list.
%
% remOc(E,l1,..ln) = empty, if n=0
%                 = rem(E,l2,..ln) if l1=E
%                 = l1 U rem(E,l2,..ln)
%

remOc(_,[],[]).
remOc(E,[H|T],Rez):-
    H =:= E,
    remOc(E,T,Rez).
remOc(E,[H|T],[H|Rez]):-
    H =\= E,
    remOc(E,T,Rez).

% b. Define a predicate to produce a list of pairs (atom n) from an
% initial list of atoms. In this initial list atom has
% n occurrences.
% Eg.: numberatom([1, 2, 1, 2, 1, 3, 1], X) => X = [[1, 4], [2, 2], [3,
% 1]].

% count the occ for each elem
% make list of it and
%
%
% countOc(l1,..ln,E) = 0, if list is empty
%                    = 1 + countOc(l2,..ln),E) if l1=E
%                    = count(l2,..ln), otherwise
%
countOc([],_,0).
countOc([H|T],E,R):- H =:=E,
    countOc(T,E,R2),
    R is R2+1.
countOc([H|T],E,R):- H =\= E,
    countOc(T,E,R).


%nratom(l1,..ln) = [], if list is empty
%                = [l1,countOc(l1)] U remOc(l2..ln,l1) U nratom(l2,..ln)
%

nratom([],[]).
nratom([H|T],[[H,Rc]|R]):-  % add the pair as head
    countOc([H|T],H,Rc), %count oc of current head
    remOc(H,T,Rr),  %remove oc of current head
    nratom(Rr,R). %go further with the result from removing


